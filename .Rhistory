print("hello")
library(shiny); runApp('eva_engel/Personal/R Programming/Mpower - Duke Project/mpower-app-version-8.R')
setwd("C:/Users/Evaen/OneDrive - Princeton University/Documents/eva_engel/Personal/Research/R Programming/Mpower - Duke Project/mpower-shiny")
library(mpower)
library(readxl)
library(bws)
library(stats)
library(reshape2)
library(tidyverse)
library(bkmr)
#names variables we want to study
chems <- c("UrinaryBisphenolA", "UrinaryBenzophenone3",
"Methylparaben", "Propylparaben",
"dichlorophenol25", "dichlorophenol24",
"MBzP", "MEP", "MiBP")
#reads in nhanes data
nhanes<- read_excel('12940_2020_642_MOESM2_ESM.xlsx', sheet = "Sheet1")
#creates MixtureModel obkect
xmod <- mpower::MixtureModel(data = nhanes[, chems], method = "resampling")
#creates OutcomeModel object based on given relationship between variables (select between small and large effect)
obs_mod_small <- mpower::OutcomeModel(f = "0.16*dichlorophenol25 + 0.12*MEP", family = "gaussian")
obs_mod_large <- mpower::OutcomeModel(f = "0.32*dichlorophenol25 + 0.24*MEP", family = "gaussian")
bkmr_mod <- mpower::InferenceModel(model = "bkmr", iter = 2000, varsel = TRUE, family = "gaussian")
df <- as.data.frame(read.csv(data/dataBKMR_small.csv))
df <- as.data.frame(read.csv("data/dataBKMR_small.csv"))
View(df)
##code to run bkmr model for sample sizes 550 and 600
df <- as.data.frame(read.csv("data/dataBKMR_small.csv"))
# run simulation for sample size of 550 using 2 cores
bkmr_out <- mpower::sim_curve(xmod=xmod, ymod=obs_mod_small, imod=bkmr_mod, s=100, n=550, cores=2)
#stores tabular summary of power curve as dataframe
ab <- as.data.frame(mpower::summary(bkmr_out, crit = "pip", thres = 0.5, how = "greater"))
#adds new summary to dataframe of previous summaries
df <- rbind(df, ab)
colnames(df)
df <- as.data.frame(read.csv("data/dataBKMR_small.csv"))
df <- df[,2:4]
View(df)
df <- as.data.frame(read.csv("data/dataBKMR_small.csv"))
df <- df[,2:4]
# run simulation for sample size of 550 using 2 cores
bkmr_out <- mpower::sim_curve(xmod=xmod, ymod=obs_mod_small, imod=bkmr_mod, s=100, n=550, cores=2)
View(ab)
df <- rbind(df, ab)
ncol(ab)
df <- as.data.frame(read.csv("data/dataBKMR_small.csv"))
View(df)
ncol(df)
df <- df[,2:6]
VieW(df)
View(df)
df <- rbind(df, ab)
View(df)
bkmr_out <- mpower::sim_curve(xmod=xmod, ymod=obs_mod_small, imod=bkmr_mod, s=100, n=600, cores=2)
#stores tabular summary of power curve as dataframe
ab <- as.data.frame(mpower::summary(bkmr_out, crit = "pip", thres = 0.5, how = "greater"))
#adds new summary to dataframe of previous summaries
df <- rbind(df, ab)
#saves dataframe to csv
write.csv(df,"data/dataBKMR_small.csv",row.names = TRUE)
View(ab)
nhanes<- read_excel('12940_2020_642_MOESM2_ESM.xlsx', sheet = "Sheet1")
#creates MixtureModel obkect
xmod <- mpower::MixtureModel(data = nhanes[, chems], method = "resampling")
#creates OutcomeModel object based on given relationship between variables (select between small and large effect)
obs_mod_small <- mpower::OutcomeModel(f = "0.16*dichlorophenol25 + 0.12*MEP", family = "gaussian")
obs_mod_large <- mpower::OutcomeModel(f = "0.32*dichlorophenol25 + 0.24*MEP", family = "gaussian")
##inference models
# define the BKMR inference model
bkmr_mod <- mpower::InferenceModel(model = "bkmr", iter = 2000, varsel = TRUE, family = "gaussian")
df <- as.data.frame(read.csv("data/dataBKMR_large.csv"))
View(df)
df <- df[,2:6]
View(df)
##code to run bkmr model large effect size for sample sizes 550 and 600 -- MAYBE TAKE OUT LATER
df <- as.data.frame(read.csv("data/dataBKMR_large.csv"))
df <- df[,2:6]
# run simulation for sample size of 550 using 2 cores
bkmr_out <- mpower::sim_curve(xmod=xmod, ymod=obs_mod_large, imod=bkmr_mod, s=100, n=550, cores=2)
#stores tabular summary of power curve as dataframe
ab <- as.data.frame(mpower::summary(bkmr_out, crit = "pip", thres = 0.5, how = "greater"))
#adds new summary to dataframe of previous summaries
df <- rbind(df, ab)
# run simulation for sample size of 600 using 2 cores
bkmr_out <- mpower::sim_curve(xmod=xmod, ymod=obs_mod_large, imod=bkmr_mod, s=100, n=600, cores=2)
#stores tabular summary of power curve as dataframe
ab <- as.data.frame(mpower::summary(bkmr_out, crit = "pip", thres = 0.5, how = "greater"))
#adds new summary to dataframe of previous summaries
df <- rbind(df, ab)
#saves dataframe to csv
write.csv(df,"data/dataBKMR_large.csv",row.names = TRUE)
View(ab)
##for large effect size
#read in bkmr simulation results for large effect size
models <- read.csv("data/dataBKMR_large.csv")
models2 <- as.data.frame(models)
#select useful columns in dataframe
models3 <- models2[,2:6]
View(models2)
View(models3)
UR <- models3[(models3$test == "UrinaryBisphenolA"),]
View(UR)
samplesize <- UR$n
#select power
pow <- UR$power
#interpolate for power
z <- approx(samplesize, pow, xout=10:600, method= 'linear')
View()
zView(z)
View(z)
zdataframe <- data.frame(x = z$x, y = z$y)
colnames(zdataframe) <- c("Sample_Size","Power")
#write results into csv
write.csv(zdataframe,"bkmr-interpolation-results/UrinaryBisphenolA_large.csv",row.names = TRUE)
View(zdataframe)
##Interpolation for UrinaryBenzophenone3
#select for UrinaryBenzophenone3
UR <- models3[(models3$test == "UrinaryBenzophenone3"),]
#select sample sizes
samplesize <- UR$n
#select power
pow <- UR$power
#interpolate for power
z <- approx(samplesize, pow, xout=10:600, method= 'linear')
#store interpolation results as data frame
zdataframe <- data.frame(x = z$x, y = z$y)
colnames(zdataframe) <- c("Sample_Size","Power")
#write results into csv
write.csv(zdataframe,"bkmr-interpolation-results/UrinaryBenzophenone3_large.csv",row.names = TRUE)
##Interpolation for Methylparaben
#select for Methylparaben
UR <- models3[(models3$test == "Methylparaben"),]
#select sample sizes
samplesize <- UR$n
#select power
pow <- UR$power
#interpolate for power
z <- approx(samplesize, pow, xout=10:600, method= 'linear')
#store interpolation results as data frame
zdataframe <- data.frame(x = z$x, y = z$y)
colnames(zdataframe) <- c("Sample_Size","Power")
#write results into csv
write.csv(zdataframe,"bkmr-interpolation-results/Methylparaben_large.csv",row.names = TRUE)
##Interpolation for Propylparaben
#select for Propylparaben
UR <- models3[(models3$test == "Propylparaben"),]
#select sample sizes
samplesize <- UR$n
#select power
pow <- UR$power
#interpolate for power
z <- approx(samplesize, pow, xout=10:600, method= 'linear')
#store interpolation results as data frame
zdataframe <- data.frame(x = z$x, y = z$y)
colnames(zdataframe) <- c("Sample_Size","Power")
#write results into csv
write.csv(zdataframe,"bkmr-interpolation-results/Propylparaben_large.csv",row.names = TRUE)
##Interpolation for dichlorophenol25
#select for dichlorophenol25
UR <- models3[(models3$test == "dichlorophenol25"),]
#select sample sizes
samplesize <- UR$n
#select power
pow <- UR$power
#interpolate for power
z <- approx(samplesize, pow, xout=10:600, method= 'linear')
#store interpolation results as data frame
zdataframe <- data.frame(x = z$x, y = z$y)
colnames(zdataframe) <- c("Sample_Size","Power")
#write results into csv
write.csv(zdataframe,"bkmr-interpolation-results/dichlorophenol25_large.csv",row.names = TRUE)
##Interpolation for dichlorophenol24
#select for dichlorophenol24
UR <- models3[(models3$test == "dichlorophenol24"),]
#select sample sizes
samplesize <- UR$n
#select power
pow <- UR$power
#interpolate for power
z <- approx(samplesize, pow, xout=10:600, method= 'linear')
#store interpolation results as data frame
zdataframe <- data.frame(x = z$x, y = z$y)
colnames(zdataframe) <- c("Sample_Size","Power")
#write results into csv
write.csv(zdataframe,"bkmr-interpolation-results/dichlorophenol24_large.csv",row.names = TRUE)
##Interpolation for MBzP
#select for MBzP
UR <- models3[(models3$test == "MBzP"),]
#select sample sizes
samplesize <- UR$n
#select power
pow <- UR$power
#interpolate for power
z <- approx(samplesize, pow, xout=10:600, method= 'linear')
#store interpolation results as data frame
zdataframe <- data.frame(x = z$x, y = z$y)
colnames(zdataframe) <- c("Sample_Size","Power")
#write results into csv
write.csv(zdataframe,"bkmr-interpolation-results/MBzP_large.csv",row.names = TRUE)
##Interpolation for MEP
#select for MEP
UR <- models3[(models3$test == "MEP"),]
#select sample sizes
samplesize <- UR$n
#select power
pow <- UR$power
#interpolate for power
z <- approx(samplesize, pow, xout=10:600, method= 'linear')
#store interpolation results as data frame
zdataframe <- data.frame(x = z$x, y = z$y)
colnames(zdataframe) <- c("Sample_Size","Power")
#write results into csv
write.csv(zdataframe,"bkmr-interpolation-results/MEP_large.csv",row.names = TRUE)
##Interpolation for MiBP
#select for MiBP
UR <- models3[(models3$test == "MiBP"),]
#select sample sizes
samplesize <- UR$n
#select power
pow <- UR$power
#interpolate for power
z <- approx(samplesize, pow, xout=10:600, method= 'linear')
#store interpolation results as data frame
zdataframe <- data.frame(x = z$x, y = z$y)
colnames(zdataframe) <- c("Sample_Size","Power")
#write results into csv
write.csv(zdataframe,"bkmr-interpolation-results/MiBP_large.csv",row.names = TRUE)
#reads in csv
UrinaryBisphenolA1 <- read.csv("bkmr-interpolation-results/UrinaryBisphenolA_large.csv")
#labels dataframe with chemical name
UrinaryBisphenolA2 <- cbind(rep("UrinaryBisphenolA", times = 591),UrinaryBisphenolA1[,c(2,3)])
colnames(UrinaryBisphenolA2)[1] <- "Chemical"
View(UrinaryBisphenolA1)
View(UrinaryBisphenolA2
)
#reads in csv
UrinaryBenzophenone31 <- read.csv("bkmr-interpolation-results/UrinaryBenzophenone3_large.csv")
#labels dataframe with chemical name
UrinaryBenzophenone32 <- cbind(rep("UrinaryBenzophenone3", times = 591),UrinaryBenzophenone31[,c(2,3)])
colnames(UrinaryBenzophenone32)[1] <- "Chemical"
#reads in csv
Methylparaben1 <- read.csv("bkmr-interpolation-results/Methylparaben_large.csv")
#labels dataframe with chemical name
Methylparaben2 <- cbind(rep("Methylparaben", times = 591),Methylparaben1[,c(2,3)])
#names column with chemical name "Chemical"
colnames(Methylparaben2)[1] <- "Chemical"
#reads in csv
Propylparaben1 <- read.csv("bkmr-interpolation-results/Propylparaben_large.csv")
#labels dataframe with chemical name
Propylparaben2 <- cbind(rep("Propylparaben", times = 591),Propylparaben1[,c(2,3)])
#names column with chemical name "Chemical"
colnames(Propylparaben2)[1] <- "Chemical"
#reads in csv
dichlorophenol251 <- read.csv("bkmr-interpolation-results/dichlorophenol25_large.csv")
#labels dataframe with chemical name
dichlorophenol252 <- cbind(rep("dichlorophenol25", times = 591),dichlorophenol251[,c(2,3)])
#names column with chemical name "Chemical"
colnames(dichlorophenol252)[1] <- "Chemical"
#reads in csv
dichlorophenol241 <- read.csv("bkmr-interpolation-results/dichlorophenol24_large.csv")
#labels dataframe with chemical name
dichlorophenol242 <- cbind(rep("dichlorophenol24", times = 591),dichlorophenol241[,c(2,3)])
#names column with chemical name "Chemical"
colnames(dichlorophenol242)[1] <- "Chemical"
#reads in csv
MBzP1 <- read.csv("bkmr-interpolation-results/MBzP_large.csv")
#labels dataframe with chemical name
MBzP2 <- cbind(rep("MBzP", times = 591),MBzP1[,c(2,3)])
#names column with chemical name "Chemical"
colnames(MBzP2)[1] <- "Chemical"
#reads in csv
MEP1 <- read.csv("bkmr-interpolation-results/MEP_large.csv")
#labels dataframe with chemical name
MEP2 <- cbind(rep("MEP", times = 591),MEP1[,c(2,3)])
#names column with chemical name "Chemical"
colnames(MEP2)[1] <- "Chemical"
#reads in csv
MiBP1 <- read.csv("bkmr-interpolation-results/MiBP_large.csv")
#labels dataframe with chemical name
MiBP2 <- cbind(rep("MiBP", times = 591),MiBP1[,c(2,3)])
#names column with chemical name "Chemical"
colnames(MiBP2)[1] <- "Chemical"
#combines individual chemicals' dataframes into one big dataframe
combined <- rbind(UrinaryBisphenolA2,UrinaryBenzophenone32,Methylparaben2,Propylparaben2,dichlorophenol252,dichlorophenol242,MBzP2,MEP2,MiBP2)
#writes big dataframe into a csv
write.csv(combined,"bkmr-interpolation-results/bkmr-interpolation-results-large.csv",row.names = TRUE)
##for small effect size
#read in bkmr simulation results for small effect size
models <- read.csv("data/dataBKMR_small.csv")
models2 <- as.data.frame(models)
#select useful columns in dataframe
models3 <- models2[,2:6]
##Interpolation for UrinaryBisphenolA
#select for UrinaryBisphenolA
UR <- models3[(models3$test == "UrinaryBisphenolA"),]
#select sample sizes
samplesize <- UR$n
#select power
pow <- UR$power
#interpolate for power
z <- approx(samplesize, pow, xout=10:600, method= 'linear')
#store interpolation results as data frame
zdataframe <- data.frame(x = z$x, y = z$y)
colnames(zdataframe) <- c("Sample_Size","Power")
#write results into csv
write.csv(zdataframe,"bkmr-interpolation-results/UrinaryBisphenolA_small.csv",row.names = TRUE)
##Interpolation for UrinaryBenzophenone3
#select for UrinaryBenzophenone3
UR <- models3[(models3$test == "UrinaryBenzophenone3"),]
#select sample sizes
samplesize <- UR$n
#select power
pow <- UR$power
#interpolate for power
z <- approx(samplesize, pow, xout=10:600, method= 'linear')
#store interpolation results as data frame
zdataframe <- data.frame(x = z$x, y = z$y)
colnames(zdataframe) <- c("Sample_Size","Power")
#write results into csv
write.csv(zdataframe,"bkmr-interpolation-results/UrinaryBenzophenone3_small.csv",row.names = TRUE)
##Interpolation for Methylparaben
#select for Methylparaben
UR <- models3[(models3$test == "Methylparaben"),]
#select sample sizes
samplesize <- UR$n
#select power
pow <- UR$power
#interpolate for power
z <- approx(samplesize, pow, xout=10:600, method= 'linear')
#store interpolation results as data frame
zdataframe <- data.frame(x = z$x, y = z$y)
colnames(zdataframe) <- c("Sample_Size","Power")
#write results into csv
write.csv(zdataframe,"bkmr-interpolation-results/Methylparaben_small.csv",row.names = TRUE)
##Interpolation for Propylparaben
#select for Propylparaben
UR <- models3[(models3$test == "Propylparaben"),]
#select sample sizes
samplesize <- UR$n
#select power
pow <- UR$power
#interpolate for power
z <- approx(samplesize, pow, xout=10:600, method= 'linear')
#store interpolation results as data frame
zdataframe <- data.frame(x = z$x, y = z$y)
colnames(zdataframe) <- c("Sample_Size","Power")
#write results into csv
write.csv(zdataframe,"bkmr-interpolation-results/Propylparaben_small.csv",row.names = TRUE)
##Interpolation for dichlorophenol25
#select for dichlorophenol25
UR <- models3[(models3$test == "dichlorophenol25"),]
#select sample sizes
samplesize <- UR$n
#select power
pow <- UR$power
#interpolate for power
z <- approx(samplesize, pow, xout=10:600, method= 'linear')
#store interpolation results as data frame
zdataframe <- data.frame(x = z$x, y = z$y)
colnames(zdataframe) <- c("Sample_Size","Power")
#write results into csv
write.csv(zdataframe,"bkmr-interpolation-results/dichlorophenol25_small.csv",row.names = TRUE)
##Interpolation for dichlorophenol24
#select for dichlorophenol24
UR <- models3[(models3$test == "dichlorophenol24"),]
#select sample sizes
samplesize <- UR$n
#select power
pow <- UR$power
#interpolate for power
z <- approx(samplesize, pow, xout=10:600, method= 'linear')
#store interpolation results as data frame
zdataframe <- data.frame(x = z$x, y = z$y)
colnames(zdataframe) <- c("Sample_Size","Power")
#write results into csv
write.csv(zdataframe,"bkmr-interpolation-results/dichlorophenol24_small.csv",row.names = TRUE)
##Interpolation for MBzP
#select for MBzP
UR <- models3[(models3$test == "MBzP"),]
#select sample sizes
samplesize <- UR$n
#select power
pow <- UR$power
#interpolate for power
z <- approx(samplesize, pow, xout=10:600, method= 'linear')
#store interpolation results as data frame
zdataframe <- data.frame(x = z$x, y = z$y)
colnames(zdataframe) <- c("Sample_Size","Power")
#write results into csv
write.csv(zdataframe,"bkmr-interpolation-results/MBzP_small.csv",row.names = TRUE)
##Interpolation for MEP
#select for MEP
UR <- models3[(models3$test == "MEP"),]
#select sample sizes
samplesize <- UR$n
#select power
pow <- UR$power
#interpolate for power
z <- approx(samplesize, pow, xout=10:600, method= 'linear')
#store interpolation results as data frame
zdataframe <- data.frame(x = z$x, y = z$y)
colnames(zdataframe) <- c("Sample_Size","Power")
#write results into csv
write.csv(zdataframe,"bkmr-interpolation-results/MEP_small.csv",row.names = TRUE)
##Interpolation for MiBP
#select for MiBP
UR <- models3[(models3$test == "MiBP"),]
#select sample sizes
samplesize <- UR$n
#select power
pow <- UR$power
#interpolate for power
z <- approx(samplesize, pow, xout=10:600, method= 'linear')
#store interpolation results as data frame
zdataframe <- data.frame(x = z$x, y = z$y)
colnames(zdataframe) <- c("Sample_Size","Power")
#write results into csv
write.csv(zdataframe,"bkmr-interpolation-results/MiBP_small.csv",row.names = TRUE)
##merging data frames
#reads in csv
UrinaryBisphenolA1 <- read.csv("bkmr-interpolation-results/UrinaryBisphenolA_small.csv")
#labels dataframe with chemical name
UrinaryBisphenolA2 <- cbind(rep("UrinaryBisphenolA", times = 591),UrinaryBisphenolA1[,c(2,3)])
colnames(UrinaryBisphenolA2)[1] <- "Chemical"
#reads in csv
UrinaryBenzophenone31 <- read.csv("bkmr-interpolation-results/UrinaryBenzophenone3_small.csv")
#labels dataframe with chemical name
UrinaryBenzophenone32 <- cbind(rep("UrinaryBenzophenone3", times = 591),UrinaryBenzophenone31[,c(2,3)])
colnames(UrinaryBenzophenone32)[1] <- "Chemical"
#reads in csv
Methylparaben1 <- read.csv("bkmr-interpolation-results/Methylparaben_small.csv")
#labels dataframe with chemical name
Methylparaben2 <- cbind(rep("Methylparaben", times = 591),Methylparaben1[,c(2,3)])
#names column with chemical name "Chemical"
colnames(Methylparaben2)[1] <- "Chemical"
#reads in csv
Propylparaben1 <- read.csv("bkmr-interpolation-results/Propylparaben_small.csv")
#labels dataframe with chemical name
Propylparaben2 <- cbind(rep("Propylparaben", times = 591),Propylparaben1[,c(2,3)])
#names column with chemical name "Chemical"
colnames(Propylparaben2)[1] <- "Chemical"
#reads in csv
dichlorophenol251 <- read.csv("bkmr-interpolation-results/dichlorophenol25_small.csv")
#labels dataframe with chemical name
dichlorophenol252 <- cbind(rep("dichlorophenol25", times = 591),dichlorophenol251[,c(2,3)])
#names column with chemical name "Chemical"
colnames(dichlorophenol252)[1] <- "Chemical"
#reads in csv
dichlorophenol241 <- read.csv("bkmr-interpolation-results/dichlorophenol24_small.csv")
#labels dataframe with chemical name
dichlorophenol242 <- cbind(rep("dichlorophenol24", times = 591),dichlorophenol241[,c(2,3)])
#names column with chemical name "Chemical"
colnames(dichlorophenol242)[1] <- "Chemical"
#reads in csv
MBzP1 <- read.csv("bkmr-interpolation-results/MBzP_small.csv")
#labels dataframe with chemical name
MBzP2 <- cbind(rep("MBzP", times = 591),MBzP1[,c(2,3)])
#names column with chemical name "Chemical"
colnames(MBzP2)[1] <- "Chemical"
#reads in csv
MEP1 <- read.csv("bkmr-interpolation-results/MEP_small.csv")
#labels dataframe with chemical name
MEP2 <- cbind(rep("MEP", times = 591),MEP1[,c(2,3)])
#names column with chemical name "Chemical"
colnames(MEP2)[1] <- "Chemical"
#reads in csv
MiBP1 <- read.csv("bkmr-interpolation-results/MiBP_small.csv")
#labels dataframe with chemical name
MiBP2 <- cbind(rep("MiBP", times = 591),MiBP1[,c(2,3)])
#names column with chemical name "Chemical"
colnames(MiBP2)[1] <- "Chemical"
#combines individual chemicals' dataframes into one big dataframe
combined <- rbind(UrinaryBisphenolA2,UrinaryBenzophenone32,Methylparaben2,Propylparaben2,dichlorophenol252,dichlorophenol242,MBzP2,MEP2,MiBP2)
#writes big dataframe into a csv
write.csv(combined,"bkmr-interpolation-results/bkmr-interpolation-results-small.csv",row.names = TRUE)
shiny::runApp()
install.packages("dplyr")
runApp()
runApp()
runApp()
?html
htlm?
eew
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
