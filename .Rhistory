print("hello")
library(shiny); runApp('eva_engel/Personal/R Programming/Mpower - Duke Project/mpower-app-version-8.R')
install.packages("ngsp")
install.packages("nsgp")
install_version("nsgp","1.0.5")
install.packages("remotes")
library(remotes)
install_version("nsgp","1.0.5")
library(nsgp)
help(nsgp)
setwd("C:/Users/Evaen/OneDrive - Princeton University/Documents/eva_engel/Personal/Research/R Programming/Mpower - Duke Project/mpower-shiny")
library(mpower)
library(bws)
library(tidyverse)
library(bkmr)
#reads in OPD data
opd_df <- read.csv('data/opd.csv')
opd_df <- opd_df %>%
mutate(DEP=URXOP2 + URXOP4 + URXOP6,
DMP=URXOP1 + URXOP3 + URXOP5) %>%
mutate(DAP=DEP+DMP)
#names variables we want to study
chems <- c("DEP", "DMP", "DAP")
#creates MixtureModel obkect
xmod <- mpower::MixtureModel(data = opd_df[, chems], method = "resampling")
#creates OutcomeModel object based on given relationship between variables (select between small and large effect)
# small effect estimates are from this paper: https://www.ncbi.nlm.nih.gov/pmc/articles/PMC4892910/
obs_mod_small <- mpower::OutcomeModel(f = "-4.17*log10(DAP) - 3.64*log10(DMP)", family = "gaussian")
obs_mod_large <- mpower::OutcomeModel(f = "–7.00*log10(DAP) + –5.97*log10(DMP)", family = "gaussian")
##inference models
########## GLM ##########
glm_mod <- InferenceModel(model = "glm", family = "gaussian")
#for loop for GLM model of SMALL effect
df <- data.frame()
for(i in 2:200){
#creates power curve for glm model
glm_out <- mpower::sim_curve(xmod=xmod, ymod=obs_mod_small, imod=glm_mod, s=s, n=(i*10), cores=2)
#stores tabular summary of power curve as dataframe
ab <- as.data.frame(summary(glm_out, crit = "pval", thres = 0.05, how = "lesser"))
#adds new summary to dataframe of previous summaries
df <- rbind(df, ab)
}
