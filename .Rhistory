points(model$period[1:6],model$debt[1:6], type = "l", col = "red")
legend(x = "topright",legend = c("Deficit", "Debt"), fill = c("blue","red"))
# adjusting variables to 10 year plan
model1 <- as.data.frame(matrix(nrow = 50, ncol = 5))
colnames(model1) <- c("period","spending","taxes","deficit10yr","debt10yr")
model1[,1] <- seq(1:50) # set periods
model1[1:10,3] <- 6.3 # set tax revenue by period
model1[11:50,3] <- 6 # set tax revenue by period
model1[1,2] <- 9 # set spending in period 1
model1[2:50,2] <- 6 # set spending in later periods
model1[1,4] <- model1[1,2] - model1[1,3] # set deficit in period 1
model1[1,5] <- model1[1,4] # set debt in period 1
for(i in 2:50) {
model1[i,4] <- round(model1[i,2] - model1[i,3],1) # find deficit in period i
model1[i,5] <- round(model1[i-1,5] + model1[i,4],1) # find debt in period i
if(model1[i,5] < 0) {
model1[i,5] <- 0
}
}
# plot figure
plot(model1$period[1:11], model1$deficit[1:11], main = "Government Deficit and Debt by Period", xlab = "Period", ylab = "Deficit or Debt in Trillions", type = "l", col = "blue")
points(model1$period[1:11],model1$debt[1:11], type = "l", col = "red")
legend(x = "topright",legend = c("Deficit", "Debt"), fill = c("blue","red"))
# adjusting variables to 30 year plan
model2 <- as.data.frame(matrix(nrow = 50, ncol = 5))
colnames(model2) <- c("period","spending","taxes","deficit30yr","debt30yr")
model2[,1] <- seq(1:50) # set periods
model2[1:30,3] <- 6.1 # set tax revenue by period
model2[31:50,3] <- 6 # set tax revenue by period
model2[1,2] <- 9 # set spending in period 1
model2[2:50,2] <- 6 # set spending in later periods
model2[1,4] <- model2[1,2] - model2[1,3] # set deficit in period 1
model2[1,5] <- model2[1,4] # set debt in period 1
for(i in 2:50) {
model2[i,4] <- round(model2[i,2] - model2[i,3],1) # find deficit in period i
model2[i,5] <- round(model2[i-1,5] + model2[i,4],1) # find debt in period i
if(model2[i,5] < 0) {
model2[i,5] <- 0
}
}
# plot figure
plot(model2$period, model2$deficit, main = "Government Deficit and Debt by Period", xlab = "Period", ylab = "Deficit or Debt in Trillions", type = "l", col = "blue")
points(model2$debt, type = "l", col = "red")
legend(x = "topright",legend = c("Deficit", "Debt"), fill = c("blue","red"))
# create model for one, five, ten, thirty year plans
model3 <- as.data.frame(matrix(nrow = 50, ncol = 5))
colnames(model3) <- c("period","spending","taxes","deficit1yr","debt1yr")
model3[,1] <- seq(1:50) # set periods
model3[1,3] <- 9 # set tax revenue by period
model3[2:50,3] <- 6 # set tax revenue by period
model3[1,2] <- 9 # set spending in period 1
model3[2:50,2] <- 6 # set spending in later periods
model3[1,4] <- model3[1,2] - model3[1,3] # set deficit in period 1
model3[1,5] <- model3[1,4] # set debt in period 1
for(i in 2:50) {
model3[i,4] <- round(model3[i,2] - model3[i,3],1) # find deficit in period i
model3[i,5] <- round(model3[i-1,5] + model3[i,4],1) # find debt in period i
if(model3[i,5] < 0) {
model3[i,5] <- 0
}
}
modelCombined <- cbind(model[,c(1,5)], model1[,5], model2[,5], model3[,5])
colnames(modelCombined) <- c("period","debt5yr","debt10yr","debt30yr","debt1yr")
# plot 50 years of data on debt
plot(modelCombined$period, modelCombined$debt1yr, main = "Government Debt by Period and Plan", xlab = "Period", ylab = "Debt in Trillions", type = "l", col = "blue", ylim = c(0,3))
points(modelCombined$debt5yr, type = "l", col = "red")
points(modelCombined$debt10yr, type = "l", col = "green")
points(modelCombined$debt30yr, type = "l", col = "pink")
legend(x = "topright",legend = c("1 Year Plan", "5 Year Plan","10 Year Plan", "30 Year Plan"), fill = c("blue","red","green","pink"))
# combine tax rates
modelTax <- cbind(model[,c(1,3)], model1[,3], model2[,3], model3[,3])
colnames(modelTax) <- c("period","tax5yr","tax10yr","tax30yr","tax1yr")
# plot 50 years of data on debt
plot(modelTax$period, modelTax$tax1yr, main = "Tax Rate by Period and Plan", xlab = "Period", ylab = "Tax Rate in Trillions", type = "l", col = "blue", ylim = c(6,9))
points(modelTax$tax5yr, type = "l", col = "red")
points(modelTax$tax10yr, type = "l", col = "green")
points(modelTax$tax30yr, type = "l", col = "pink")
legend(x = "topright",legend = c("1 Year Plan", "5 Year Plan","10 Year Plan", "30 Year Plan"), fill = c("blue","red","green","pink"))
# assume interest rate is 2% per year
Rt <- 0.02
model <- as.data.frame(matrix(nrow = 5, ncol = 6))
colnames(model) <- c("period","spending","taxes","deficit","debt","primaryDeficit")
model[,1] <- seq(1:5) # set periods
model[1:5,3] <- 6.6 # set tax revenue by period
model[1,2] <- 9 # set spending in period 1
model[2:5,2] <- 6 # set spending in later periods
model[1,4] <- model[1,2] - model[1,3] # set deficit in period 1
model[1,5] <- model[1,4] # set debt in period 1
model[1,6] <- model[1,2] - model[1,3]
for(i in 2:5) {
model[i,4] <- model[i,2] + (Rt*model[i-1,5])- model[i,3] # find deficit in period i
model[i,5] <- model[i-1,5] + model[i,4] # find debt in period i
model[i, 6] <- model[i,2] - model[i,3] # find primary deficit
if(model[i,5] < 0) {
model[i,5] <- 0
}
}
# problem 2
# create data frame of values of minimum wage
model <- as.data.frame(matrix(nrow = 6, ncol = 4))
colnames(model) <- c("year", "minWage", "CPI", "realWage")
model[,1] <- c(1970, 1980, 1990, 2000, 2010, 2020)
model[1,2] <- 1.6/1.6
model[2,2] <- 3.1/1.6
model[3,2] <- 3.35/1.6
model[4,2] <- 5.15/1.6
model[5,2] <- 7.25/1.6
model[6,2] <- 7.25/1.6
model[1,3] <- 38.8
model[2,3] <- 82.4
model[3,3] <- 130.7
model[4,3] <- 172.2
model[5,3] <- 218.056
model[6,3] <- 258.811
for(i in 1:6) {
model[i,4] <- ((model[i,2]*1.6)/model[i,3])*100
}
for(i in 1:6) {
model[i,4] <- model[i,4]/model[1,4]
}
plot(model$year, model$minWage, main = "US Federal Minimum Wage by Decade", xlab = "Year", ylab = "Minimum Wage", type = "l", col = "red", ylim = c(0, 5))
points(model$year, model$realWage, type = "l", col = "blue")
legend(x = "topleft",legend = c("Nominal Wage Relative to 1970 Value", "Real Minimum Wage"), fill = c("red","blue"))
dev.new()
plot(model$year, model$minWage, main = "US Federal Minimum Wage by Decade", xlab = "Year", ylab = "Minimum Wage", type = "l", col = "red", ylim = c(0, 5))
points(model$year, model$realWage, type = "l", col = "blue")
legend(x = "topleft",legend = c("Nominal Wage Relative to 1970 Value", "Real Minimum Wage"), fill = c("red","blue"))
plot(model$year, model$minWage, main = "US Federal Minimum Wage by Decade", xlab = "Year", ylab = "Minimum Wage", type = "l", col = "red", ylim = c(0, 5))
points(model$year, model$realWage, type = "l", col = "blue")
legend(x = "topleft",legend = c("Nominal Wage Relative to 1970 Value", "Real Minimum Wage Relative to 1970 Value"), fill = c("red","blue"))
dev.new()
plot(model$year, model$minWage, main = "US Federal Minimum Wage by Decade", xlab = "Year", ylab = "Minimum Wage", type = "l", col = "red", ylim = c(0, 5))
points(model$year, model$realWage, type = "l", col = "blue")
legend(x = "topleft",legend = c("Nominal Wage Relative to 1970 Value", "Real Minimum Wage Relative to 1970 Value"), fill = c("red","blue"))
# Author: Eva Engel
# Title: ECO101 Homework 7
# Date: 4/13/2024
# problem 1
# set variables for five year plan
model <- as.data.frame(matrix(nrow = 50, ncol = 5))
colnames(model) <- c("period","spending","taxes","deficit5yr","debt5yr")
model[,1] <- seq(1:50) # set periods
model[1:5,3] <- 6.6 # set tax revenue by period
model[6:50,3] <- 6 # set tax revenue by period
model[1,2] <- 9 # set spending in period 1
model[2:50,2] <- 6 # set spending in later periods
model[1,4] <- model[1,2] - model[1,3] # set deficit in period 1
model[1,5] <- model[1,4] # set debt in period 1
for(i in 2:50) {
model[i,4] <- round(model[i,2] - model[i,3],1) # find deficit in period i
model[i,5] <- round(model[i-1,5] + model[i,4],1) # find debt in period i
if(model[i,5] < 0) {
model[i,5] <- 0
}
}
# plot figure
plot(model$period[1:6], model$deficit[1:6], main = "Government Deficit and Debt by Period", xlab = "Period", ylab = "Deficit or Debt in Trillions", type = "l", col = "blue")
points(model$period[1:6],model$debt[1:6], type = "l", col = "red")
legend(x = "topright",legend = c("Deficit", "Debt"), fill = c("blue","red"))
# adjusting variables to 10 year plan
model1 <- as.data.frame(matrix(nrow = 50, ncol = 5))
colnames(model1) <- c("period","spending","taxes","deficit10yr","debt10yr")
model1[,1] <- seq(1:50) # set periods
model1[1:10,3] <- 6.3 # set tax revenue by period
model1[11:50,3] <- 6 # set tax revenue by period
model1[1,2] <- 9 # set spending in period 1
model1[2:50,2] <- 6 # set spending in later periods
model1[1,4] <- model1[1,2] - model1[1,3] # set deficit in period 1
model1[1,5] <- model1[1,4] # set debt in period 1
for(i in 2:50) {
model1[i,4] <- round(model1[i,2] - model1[i,3],1) # find deficit in period i
model1[i,5] <- round(model1[i-1,5] + model1[i,4],1) # find debt in period i
if(model1[i,5] < 0) {
model1[i,5] <- 0
}
}
# plot figure
plot(model1$period[1:11], model1$deficit[1:11], main = "Government Deficit and Debt by Period", xlab = "Period", ylab = "Deficit or Debt in Trillions", type = "l", col = "blue")
points(model1$period[1:11],model1$debt[1:11], type = "l", col = "red")
legend(x = "topright",legend = c("Deficit", "Debt"), fill = c("blue","red"))
# adjusting variables to 30 year plan
model2 <- as.data.frame(matrix(nrow = 50, ncol = 5))
colnames(model2) <- c("period","spending","taxes","deficit30yr","debt30yr")
model2[,1] <- seq(1:50) # set periods
model2[1:30,3] <- 6.1 # set tax revenue by period
model2[31:50,3] <- 6 # set tax revenue by period
model2[1,2] <- 9 # set spending in period 1
model2[2:50,2] <- 6 # set spending in later periods
model2[1,4] <- model2[1,2] - model2[1,3] # set deficit in period 1
model2[1,5] <- model2[1,4] # set debt in period 1
for(i in 2:50) {
model2[i,4] <- round(model2[i,2] - model2[i,3],1) # find deficit in period i
model2[i,5] <- round(model2[i-1,5] + model2[i,4],1) # find debt in period i
if(model2[i,5] < 0) {
model2[i,5] <- 0
}
}
# plot figure
plot(model2$period, model2$deficit, main = "Government Deficit and Debt by Period", xlab = "Period", ylab = "Deficit or Debt in Trillions", type = "l", col = "blue")
points(model2$debt, type = "l", col = "red")
legend(x = "topright",legend = c("Deficit", "Debt"), fill = c("blue","red"))
# create model for one, five, ten, thirty year plans
model3 <- as.data.frame(matrix(nrow = 50, ncol = 5))
colnames(model3) <- c("period","spending","taxes","deficit1yr","debt1yr")
model3[,1] <- seq(1:50) # set periods
model3[1,3] <- 9 # set tax revenue by period
model3[2:50,3] <- 6 # set tax revenue by period
model3[1,2] <- 9 # set spending in period 1
model3[2:50,2] <- 6 # set spending in later periods
model3[1,4] <- model3[1,2] - model3[1,3] # set deficit in period 1
model3[1,5] <- model3[1,4] # set debt in period 1
for(i in 2:50) {
model3[i,4] <- round(model3[i,2] - model3[i,3],1) # find deficit in period i
model3[i,5] <- round(model3[i-1,5] + model3[i,4],1) # find debt in period i
if(model3[i,5] < 0) {
model3[i,5] <- 0
}
}
modelCombined <- cbind(model[,c(1,5)], model1[,5], model2[,5], model3[,5])
colnames(modelCombined) <- c("period","debt5yr","debt10yr","debt30yr","debt1yr")
# plot 50 years of data on debt
plot(modelCombined$period, modelCombined$debt1yr, main = "Government Debt by Period and Plan", xlab = "Period", ylab = "Debt in Trillions", type = "l", col = "blue", ylim = c(0,3))
points(modelCombined$debt5yr, type = "l", col = "red")
points(modelCombined$debt10yr, type = "l", col = "green")
points(modelCombined$debt30yr, type = "l", col = "pink")
legend(x = "topright",legend = c("1 Year Plan", "5 Year Plan","10 Year Plan", "30 Year Plan"), fill = c("blue","red","green","pink"))
# combine tax rates
modelTax <- cbind(model[,c(1,3)], model1[,3], model2[,3], model3[,3])
colnames(modelTax) <- c("period","tax5yr","tax10yr","tax30yr","tax1yr")
# plot 50 years of data on debt
plot(modelTax$period, modelTax$tax1yr, main = "Tax Rate by Period and Plan", xlab = "Period", ylab = "Tax Rate in Trillions", type = "l", col = "blue", ylim = c(6,9))
points(modelTax$tax5yr, type = "l", col = "red")
points(modelTax$tax10yr, type = "l", col = "green")
points(modelTax$tax30yr, type = "l", col = "pink")
legend(x = "topright",legend = c("1 Year Plan", "5 Year Plan","10 Year Plan", "30 Year Plan"), fill = c("blue","red","green","pink"))
# assume interest rate is 2% per year
Rt <- 0.02
model <- as.data.frame(matrix(nrow = 5, ncol = 6))
colnames(model) <- c("period","spending","taxes","deficit","debt","primaryDeficit")
model[,1] <- seq(1:5) # set periods
model[1:5,3] <- 6.6 # set tax revenue by period
model[1,2] <- 9 # set spending in period 1
model[2:5,2] <- 6 # set spending in later periods
model[1,4] <- model[1,2] - model[1,3] # set deficit in period 1
model[1,5] <- model[1,4] # set debt in period 1
model[1,6] <- model[1,2] - model[1,3]
for(i in 2:5) {
model[i,4] <- model[i,2] + (Rt*model[i-1,5])- model[i,3] # find deficit in period i
model[i,5] <- model[i-1,5] + model[i,4] # find debt in period i
model[i, 6] <- model[i,2] - model[i,3] # find primary deficit
if(model[i,5] < 0) {
model[i,5] <- 0
}
}
# problem 2
# create data frame of values of minimum wage
model <- as.data.frame(matrix(nrow = 6, ncol = 4))
colnames(model) <- c("year", "minWage", "CPI", "realWage")
model[,1] <- c(1970, 1980, 1990, 2000, 2010, 2020)
model[1,2] <- 1.6/1.6
model[2,2] <- 3.1/1.6
model[3,2] <- 3.35/1.6
model[4,2] <- 5.15/1.6
model[5,2] <- 7.25/1.6
model[6,2] <- 7.25/1.6
model[1,3] <- 38.8
model[2,3] <- 82.4
model[3,3] <- 130.7
model[4,3] <- 172.2
model[5,3] <- 218.056
model[6,3] <- 258.811
for(i in 1:6) {
model[i,4] <- ((model[i,2]*1.6)/model[i,3])*100
}
View(model)
model <- as.data.frame(matrix(nrow = 6, ncol = 4))
colnames(model) <- c("year", "minWage", "CPI", "realWage")
model[,1] <- c(1970, 1980, 1990, 2000, 2010, 2020)
model[1,2] <- 1.6/1.6
model[2,2] <- 3.1/1.6
model[3,2] <- 3.35/1.6
model[4,2] <- 5.15/1.6
model[5,2] <- 7.25/1.6
model[6,2] <- 7.25/1.6
model[1,3] <- 38.8
model[2,3] <- 82.4
model[3,3] <- 130.7
model[4,3] <- 172.2
model[5,3] <- 218.056
model[6,3] <- 258.811
for(i in 1:6) {
model[i,4] <- ((model[i,2]*1.6)/model[i,3])*100
}
for(i in 1:6) {
model[i,4] <- model[i,4]/model[1,4]
}
model <- as.data.frame(matrix(nrow = 6, ncol = 4))
colnames(model) <- c("year", "minWage", "CPI", "realWage","relativeRealWage")
model <- as.data.frame(matrix(nrow = 6, ncol = 5))
colnames(model) <- c("year", "minWage", "CPI", "realWage","relativeRealWage")
model[,1] <- c(1970, 1980, 1990, 2000, 2010, 2020)
model[1,2] <- 1.6/1.6
model[2,2] <- 3.1/1.6
model[3,2] <- 3.35/1.6
model[4,2] <- 5.15/1.6
model[5,2] <- 7.25/1.6
model[6,2] <- 7.25/1.6
model[1,3] <- 38.8
model[2,3] <- 82.4
model[3,3] <- 130.7
model[4,3] <- 172.2
model[5,3] <- 218.056
model[6,3] <- 258.811
for(i in 1:6) {
model[i,4] <- ((model[i,2]*1.6)/model[i,3])*100
}
for(i in 1:6) {
model[i,5] <- model[i,4]/model[1,4]
}
View(model)
dev.new()
plot(model$year, model$minWage, main = "US Federal Minimum Wage by Decade", xlab = "Year", ylab = "Minimum Wage", type = "l", col = "red", ylim = c(0, 5))
points(model$year, model$relativeRealWage, type = "l", col = "blue")
legend(x = "topleft",legend = c("Nominal Wage Relative to 1970 Value", "Real Minimum Wage Relative to 1970 Value"), fill = c("red","blue"))
setwd("C:/Users/Evaen/OneDrive - Princeton University/Documents/eva_engel/Personal/Research/R Programming/Mpower - Duke Project/mpower-shiny")
models <- read.csv("data/dataBKMR_large.csv")
models2 <- as.data.frame(models)
#select useful columns in dataframe
models3 <- models2[,2:6]
View(models3)
models <- read.csv("data/dataBKMR_small.csv")
models2 <- as.data.frame(models)
#select useful columns in dataframe
models3 <- models2[,2:6]
View(models3)
##for large effect size
#read in glm simulation results for large effect size
models <- read.csv("data/dataGLM_large.csv")
models2 <- as.data.frame(models)
#select useful columns in dataframe
models3 <- models2[,2:6]
View(models3)
models <- read.csv("data/dataGLM_small.csv")
models2 <- as.data.frame(models)
#select useful columns in dataframe
models3 <- models2[,2:6]
View(models3)
##for large effect size
#read in glm simulation results for large effect size
models <- read.csv("data/output_opd_glm_large.csv")
models2 <- as.data.frame(models)
#select useful columns in dataframe
models3 <- models2[,2:6]
View(models3)
##for small effect size
#read in glm simulation results for small effect size
models <- read.csv("data/output_opd_glm_small.csv")
models2 <- as.data.frame(models)
#select useful columns in dataframe
models3 <- models2[,2:6]
View(models3)
#read in bkmr simulation results for large effect size
models <- read.csv("data/output_opd_bkmr_large.csv")
models2 <- as.data.frame(models)
#select useful columns in dataframe
models3 <- models2[,2:6]
View(models3)
##for small effect size
#read in bkmr simulation results for small effect size
models <- read.csv("data/output_opd_bkmr_small.csv")
models2 <- as.data.frame(models)
#select useful columns in dataframe
models3 <- models2[,2:6]
##Interpolation for URXOP2
View(models3)
#read in bws simulation results for small effect sizes
modelsa <- read.csv("data/dataBWS_small.csv")
modelsb <- as.data.frame(modelsa)
#select useful columns in dataframe
modelsc <- modelsb[,2:6]
View(models3)
View(models3)
samplesize <- modelsc$Sample.Size
#select power
pow <- c(modelsc$power,1)
modelsa <- read.csv("data/dataBWS_small.csv")
modelsb <- as.data.frame(modelsa)
#select useful columns in dataframe
modelsc <- modelsb[,2:6]
##Interpolation for bws simulations
#select sample sizes
samplesize <- modelsc$Sample.Size
#select power
pow <- modelsc$power
View(modelsc)
samplesize
modelsa <- read.csv("data/dataBWS_small.csv")
modelsb <- as.data.frame(modelsa)
#select useful columns in dataframe
modelsc <- modelsb[,2:6]
View(modelsc)
samplesize <- modelsc$Sample.Size
samplesize
pow <- modelsc$power
pow
z <- approx(samplesize, pow, xout=20:2220, method= 'linear')
z
modelsa <- read.csv("data/dataBWS_large.csv")
modelsb <- as.data.frame(modelsa)
#select useful columns in dataframe
modelsc <- modelsb[,2:6]
View(modelsc)
## for small effect sizes
#read in bws simulation results for small effect sizes
modelsa <- read.csv("data/dataBWS_small.csv")
modelsb <- as.data.frame(modelsa)
#select useful columns in dataframe
modelsc <- modelsb[,2:6]
##Interpolation for bws simulations
#select sample sizes
samplesize <- modelsc$Sample.Size
#select power
pow <- modelsc$power
#interpolate for power
z <- approx(samplesize, pow, xout=20:2220, method= 'linear')
#store interpolation results as data frame
zdataframe <- data.frame(x = z$x0, y = z$y)
View(z)
zdataframe <- data.frame(x = z$x, y = z$y)
## for small effect sizes
#read in bws simulation results for small effect sizes
modelsa <- read.csv("data/dataBWS_small.csv")
modelsb <- as.data.frame(modelsa)
#select useful columns in dataframe
modelsc <- modelsb[,2:6]
##Interpolation for bws simulations
#select sample sizes
samplesize <- modelsc$Sample.Size
#select power
pow <- modelsc$power
#interpolate for power
z <- approx(samplesize, pow, xout=20:2220, method= 'linear')
#store interpolation results as data frame
zdataframe <- data.frame(x = z$x, y = z$y)
#labels z$x column as Sample_Size and z$y column as Power
colnames(zdataframe) <- c("Sample_Size","Power")
#write results into csv
write.csv(zdataframe,"bws-interpolation-results/bws-interpolation-results-small.csv",row.names = TRUE)
## for large effect sizes
#read in bws simulation results for large effect sizes
modelsa <- read.csv("data/dataBWS_large.csv")
modelsb <- as.data.frame(modelsa)
#select useful columns in dataframe
modelsc <- modelsb[,2:6]
##Interpolation for bws simulations
#select sample sizes
samplesize <- modelsc$Sample.Size
#select power
pow <- modelsc$power
#interpolate for power
z <- approx(samplesize, pow, xout=20:2220, method= 'linear')
#store interpolation results as data frame
zdataframe <- data.frame(x = z$x, y = z$y)
#labels z$x column as Sample_Size and z$y column as Power
colnames(zdataframe) <- c("Sample_Size","Power")
#write results into csv
write.csv(zdataframe,"bws-interpolation-results/bws-interpolation-results-large.csv",row.names = TRUE)
#read in bws simulation results for small effect sizes
modelsa <- read.csv("data/output_opd_bws_small.csv")
modelsb <- as.data.frame(modelsa)
#select useful columns in dataframe
modelsc <- modelsb[,2:6]
View(modelsc)
#read in bws simulation results for small effect sizes
modelsa <- read.csv("data/output_opd_bws_small.csv")
modelsb <- as.data.frame(modelsa)
#select useful columns in dataframe
modelsc <- modelsb[,2:6]
##Interpolation for bws simulations
#select sample sizes
samplesize <- modelsc$Sample.Size
#select power
pow <- modelsc$power
#interpolate for power
z <- approx(samplesize, pow, xout=20:2220, method= 'linear')
#store interpolation results as data frame
zdataframe <- data.frame(x = z$x, y = z$y)
#labels z$x column as Sample_Size and z$y column as Power
colnames(zdataframe) <- c("Sample_Size","Power")
#write results into csv
write.csv(zdataframe,"opd-bws-interpolation-results/opd-bws-interpolation-small.csv",row.names = TRUE)
## for large effect sizes
#read in bws simulation results for large effect sizes
modelsa <- read.csv("data/output_opd_bws_large.csv")
modelsb <- as.data.frame(modelsa)
#select useful columns in dataframe
modelsc <- modelsb[,2:6]
##Interpolation for bws simulations
#select sample sizes
samplesize <- modelsc$Sample.Size
#select power
pow <- modelsc$power
#interpolate for power
z <- approx(samplesize, pow, xout=20:2220, method= 'linear')
#store interpolation results as data frame
zdataframe <- data.frame(x = z$x, y = z$y)
#labels z$x column as Sample_Size and z$y column as Power
colnames(zdataframe) <- c("Sample_Size","Power")
#write results into csv
write.csv(zdataframe,"opd-bws-interpolation-results/opd-bws-interpolation-large.csv",row.names = TRUE)
samplesize
shiny::runApp()
